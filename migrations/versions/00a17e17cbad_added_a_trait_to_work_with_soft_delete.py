"""Added a trait to work with soft delete

Revision ID: 00a17e17cbad
Revises: 98a6678d52ee
Create Date: 2023-03-18 04:24:39.564784

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '00a17e17cbad'
down_revision = '98a6678d52ee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('createdAt', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updatedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deletedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=False))

    with op.batch_alter_table('boxes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('createdAt', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updatedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deletedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=False))
        batch_op.drop_column('updated')
        batch_op.drop_column('created')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('createdAt', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updatedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deletedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=False))
        batch_op.drop_column('updated')
        batch_op.drop_column('created')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('createdAt', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updatedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deletedAt', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=False))
        batch_op.drop_column('updated')
        batch_op.drop_column('created')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_column('deleted')
        batch_op.drop_column('deletedAt')
        batch_op.drop_column('updatedAt')
        batch_op.drop_column('createdAt')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_column('deleted')
        batch_op.drop_column('deletedAt')
        batch_op.drop_column('updatedAt')
        batch_op.drop_column('createdAt')

    with op.batch_alter_table('boxes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_column('deleted')
        batch_op.drop_column('deletedAt')
        batch_op.drop_column('updatedAt')
        batch_op.drop_column('createdAt')

    with op.batch_alter_table('balances', schema=None) as batch_op:
        batch_op.drop_column('deleted')
        batch_op.drop_column('deletedAt')
        batch_op.drop_column('updatedAt')
        batch_op.drop_column('createdAt')

    # ### end Alembic commands ###
